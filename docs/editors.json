{"title":"Plinky Editors","slug":"editors","html":"<h2 id=\"browser-based-patch-editor\">Browser-based Patch Editor</h2>\n<p>Plinky has a a browser-based patch editor at <a target=\"_blank\" rel=\"nofollow\" href=\"https://plinkysynth.github.io/editor/\">plinkysynth.github.io/editor</a>.\nYou will need a Web-Serial enabled browser like Google Chrome to run it, and allow it to connect with Plinky. </p>\n<p>Here&#39;s how to use the editor.</p>\n<ul>\n<li>Connect Plinky to your Computer using a USB cable</li>\n<li>Open Chrome, and navigate to <a target=\"_blank\" rel=\"nofollow\" href=\"https://plinkysynth.github.io/editor/\">plinkysynth.github.io/editor</a></li>\n<li>The page reads &quot;Current state: disconnected&quot;. </li>\n<li>Click the Connect button.</li>\n<li>A popup will appear and prompt you to select a MIDI device. Select &quot;Plinky MIDI Synth&quot; and click connect.</li>\n</ul>\n<p>If do not see Plinky listed here, try another USB cable. \n<br>Note that some USB cables are charge-only and do not transmit data.\n<br>On Linux, you will need to <a onclick=\"document.location.hash='browser-based-patch-editor-linux-';\" href=\"javascript:;\">grant hardware access</a> to Plinky. </p>\n<p><img src=\"/editors/Plinky_Patch_Editor_0.png\" alt=\"Plinky - Browser-based Patch Editor\"></p>\n<p>The page should change to read &quot;Current state: connected&quot; at the top.</p>\n<ul>\n<li>Under Current Patch, the page will say &quot;No patch in browser memory&quot;</li>\n<li>Enter the patch number you want to edit.</li>\n<li>This should ideally be the same preset you have selected on Plinky, unless you plan to copy a preset into another slot.</li>\n<li>Click Load Patch. This downloads the settings to the browser.</li>\n<li>You will see the page fill with the parameters of the patch.</li>\n</ul>\n<p>You may need to scroll down to see a list of all the parameters.</p>\n<p><img src=\"/editors/Plinky_Patch_Editor_1.png\" alt=\"Plinky - Browser-based Patch Editor\"></p>\n<p>For each Parameter, you can change these parameters:</p>\n<ul>\n<li>use the Slider to set the base value for the parameter.</li>\n<li>Env sets the amount the envelope will modulate this parameter</li>\n<li>Pressure sets how much pressure will influence this parameter</li>\n<li>A, B, X, Y determine the modulation from the A, B knobs and A, B, X, Y Control voltage</li>\n<li>Random: enter a number to set how much this parameter is randomized each time you play a note</li>\n</ul>\n<p>Click the Details arrow to expand a detailed description for this Parameter.</p>\n<p><img src=\"/editors/Plinky_Patch_Editor_2.png\" alt=\"Plinky - Browser-based Patch Editor\"></p>\n<p>Once you are done editing the parameters, scroll back up.</p>\n<ul>\n<li>Under Patch name and category, you can set a patch name, and a descriptive (or silly) category.</li>\n<li>Click Save patch. This upload the settings to Plinky.</li>\n</ul>\n<p>Important: the values you edit do not update in real time.\nYou have to click Save Patch in order upload the settings to Plinky and hear your changes.</p>\n<p>If you want to edit a subset of parameters in real time, use the TouchOSC editor.</p>\n<p>Under Link to Patch, you will find the complete Patch encoded in a link.\nCopy this Link and save it in a text file if you want to archive your preset.\nNote that this saves the synthesis parameters, but not the sampled material.</p>\n<h3 id=\"browser-based-patch-editor-linux-\">Browser-based patch editor (Linux)</h3>\n<p>When trying to connect to the <a target=\"_blank\" rel=\"nofollow\" href=\"https://plinkysynth.github.io/editor/\">browser-based patch editor</a> using Linux, if you get a message like </p>\n<pre class=\"language-\"><code class=\"language-\">SecurityError: Failed to execute 'open' on 'USBDevice': Access denied. </code></pre><p>you may need to grant hardware access to Plinky. This can be done by adding an udev rule.</p>\n<p>First, ensure that the Plinky is connected to your computer via USB. \n</br>You can check if the Plinky is connected by running:</p>\n<pre class=\"language-\"><code class=\"language-\">lsusb</code></pre><p>You should see a line similar to:</p>\n<pre class=\"language-\"><code class=\"language-\">Bus 001 Device 026: ID cafe:4018 Plinky PlinkySynth MIDI</code></pre><p>Note the cafe id. If this is not showing up, you may need to check your USB cable.</p>\n<p>Next, add yourself to the plugdev group. You can do this by running:</p>\n<pre class=\"language-\"><code class=\"language-\">sudo usermod -a -G plugdev $USER</code></pre><p>You will need to log out and log back in for the group membership to take effect. \n</br>To check if you are in the plugdev group, you can run:</p>\n<pre class=\"language-\"><code class=\"language-\">groups</code></pre><p>This should show a list of groups you are in, and plugdev should be one of them.</p>\n<p>Next, you need to create a udev rule to allow access to the Plinky. \n</br>You can use nano or any other editor of your choice:</p>\n<pre class=\"language-\"><code class=\"language-\">sudo nano /etc/udev/rules.d/99-plinky.rules</code></pre><p>The file should have the following line:</p>\n<pre class=\"language-\"><code class=\"language-\">SUBSYSTEM==\"usb\", ATTRS{idVendor}==\"cafe\", MODE=\"0660\", GROUP=\"plugdev\"</code></pre><p>This grants read access to the Plinky to the plugdev group.</p>\n<p>Then, reload the udev rules:</p>\n<pre class=\"language-\"><code class=\"language-\">sudo udevadm control --reload-rules</code></pre><p>Finally, unplug and replug the Plinky, and you should be able to connect to the editor.\n</br>Thank you to users ddmm64 and ch-one for submitting this solution.</p>\n<h2 id=\"touchosc-editor\">TouchOSC Editor</h2>\n<p>Steven <a target=\"_blank\" rel=\"nofollow\" href=\"https://www.instagram.com/okyeron/\">Okyeron</a> / <a target=\"_blank\" rel=\"nofollow\" href=\"https://www.denki-oto.com/\">Denki Oto</a> has created a TouchOSC template for Plinky. </p>\n<p>It allows you to edit a subset of Plinkys parameters via MIDI in realtime, using Plinky&#39;s <a target=\"_blank\" rel=\"nofollow\" href=\"../docs/midi\">MIDI implementation</a>.</p>\n<p>Here&#39;s how to use it:</p>\n<ul>\n<li>Install TouchOSC from <a target=\"_blank\" rel=\"nofollow\" href=\"https://hexler.net/touchosc\">hexler.net/touchosc</a>.</li>\n<li>In this guide we use version 1.3.5.212 on Windows 10.</li>\n<li>Download the template file for Plinky: <a href=\"/editors/plinky_control_v1.2.tosc\">plinky_control_v1.2.tosc</a></li>\n<li>Connect Plinky to your Computer via USB</li>\n</ul>\n<p>Now open TouchOSC and load the template file via File &gt; Open.</p>\n<p><img src=\"/editors/TouchOSC_1.0_Plinky_Control_V1.png\" alt=\"Plinky - TouchOSC Editor\"></p>\n<p>Next, make sure Plinky is found as a MIDI device.</p>\n<ul>\n<li>Go to Edit &gt; Preferences</li>\n<li>Under Inputs and Outputs, set a checkmark next to PlinkySynth MIDI</li>\n</ul>\n<p>If do not see Plinky listed here, try another USB cable. \n<br>Note that some USB cables are charge-only and do not transmit data.</p>\n<p><img src=\"/editors/TouchOSC_2.1_Preferences.png\" alt=\"Plinky - TouchOSC Editor\"></p>\n<p>Then, you need to tell TouchOSC you want to send the MIDI from this template to Plinky.</p>\n<ul>\n<li>Go to Edit &gt; Connections</li>\n<li>Check Connection 1</li>\n<li>For Send Port and Receive Port click Browse, then select PlinkySynth MIDI</li>\n</ul>\n<p>Save your settings by clicking Done.</p>\n<p><img src=\"/editors/TouchOSC_3.1_Connections.png\" alt=\"Plinky - TouchOSC Editor\"></p>\n<p>To launch the template, click the Play button.</p>\n<p>Use the sliders to set Plinkys parameters in realtime, via MIDI.</p>\n<p><img src=\"/editors/TouchOSC_4.1_Play.png\" alt=\"Plinky - TouchOSC Editor\"></p>\n<p>While this example is written for the desktop app, TouchOSC runs on Android and iOS as well. You should be able to connect Plinky via an OTG USB cable and be able to control Plinky in a similar fashion.</p>\n<h2 id=\"max-for-live-editor\">Max for Live Editor</h2>\n<p>Luca Spagnoletti / <a target=\"_blank\" rel=\"nofollow\" href=\"https://www.eklerorecords.com/pixfoil/\">PixFoil</a> has contributed a Max for Live Editor for Plinky.\n<br>Luca is an electronic musician and composer. Check out his work here: <a target=\"_blank\" rel=\"nofollow\" href=\"https://eklero.bandcamp.com/album/atlante\">Atlante</a> - <a target=\"_blank\" rel=\"nofollow\" href=\"https://eklero.bandcamp.com/album/oopart\">OOPArt</a> - <a target=\"_blank\" rel=\"nofollow\" href=\"https://eklero.bandcamp.com/album/c-h-o-n\">C H O N (Compilation)</a></p>\n<p>It allows you to edit a subset of Plinkys parameters via MIDI in realtime, using Plinky&#39;s <a target=\"_blank\" rel=\"nofollow\" href=\"../docs/midi\">MIDI implementation</a>.\nTo run the patch, you need an installation of <a target=\"_blank\" rel=\"nofollow\" href=\"https://www.ableton.com/en/live/\">Ableton Live</a> (11 or newer) with a <a target=\"_blank\" rel=\"nofollow\" href=\"https://www.ableton.com/en/live/max-for-live/\">Max for Live</a> license.</p>\n<p>Follow these steps to setup the editor:</p>\n<ul>\n<li>Connect Plinky to your computer via USB</li>\n<li>Download the editor file for Plinky: <a href=\"/editors/Plinky_Editor_1.0.amxd\">Plinky_Editor_1.0.amxd</a></li>\n<li>Open Ableton Live</li>\n<li>Right click the User Library</li>\n<li>Select Show in Explorer (Windows) or Show in Finder (Mac)</li>\n<li>Create a Folder Editors and a subfolder Plinky Editor</li>\n<li>Place the .amxd file in it</li>\n</ul>\n<p>The Editor should now be visible in Live under User Library &gt; Editors &gt; Plinky Editor &gt; Plinky_Editor_1.0</p>\n<p><img src=\"/editors/Max4Live_1.png\" alt=\"Plinky - TouchOSC Editor\"></p>\n<p>Now we need to set up the MIDI connection.</p>\n<ul>\n<li>In Live, go to Options &gt; Preferences</li>\n<li>Navigate to the Link Tempo MIDI tab</li>\n<li>Under MIDI Ports, you should see Out: PlinkySynth MIDI. Set a checkmark for Track.</li>\n</ul>\n<p>If do not see Plinky listed here, try another USB cable. \n<br>Note that some USB cables are charge-only and do not transmit data.</p>\n<p>We have enabled MIDI output to Plinky. Now we need to route a MIDI Track to it.</p>\n<ul>\n<li>In this example we use Track 1 MIDI from an empty Live Set. </li>\n<li>Or, to create a new one, go to Create &gt; Insert MIDI Track </li>\n<li>Make sure the I/O section for Tracks is visible. </li>\n<li>If it isn&#39;t, go to View &gt; In/Out and set the checkmark.</li>\n<li>From the MIDI To dropdown, select PlinkySynth MIDI.</li>\n</ul>\n<p><img src=\"/editors/Max4Live_2.png\" alt=\"Plinky - TouchOSC Editor\"></p>\n<p>Let&#39;s drop the Editor onto the track.</p>\n<ul>\n<li>Go to User Library &gt; Editors &gt; Plinky Editor </li>\n<li>Drag and drop Plinky_Editor_1.0.amxd into Track 1 MIDI</li>\n<li>Click Open to display the user interface</li>\n</ul>\n<p><img src=\"/editors/Max4Live_3.png\" alt=\"Plinky - TouchOSC Editor\"></p>\n<p>Now you can use the rotary knobs and sliders to set Plinkys parameters in realtime, via MIDI.</p>\n<p>Note that this editor also integrates with <a target=\"_blank\" rel=\"nofollow\" href=\"https://www.ableton.com/en/push/\">Ableton Push 2 and 3</a> controllers.</p>\n","date":"2021-01-24T08:38:00.000Z","excerpt":"","printDate":"January 24, 2021","toc":[{"anchor":"browser-based-patch-editor","level":2,"text":"Browser-based Patch Editor"},{"anchor":"browser-based-patch-editor-linux-","level":3,"text":"Browser-based patch editor (Linux)"},{"anchor":"touchosc-editor","level":2,"text":"TouchOSC Editor"},{"anchor":"max-for-live-editor","level":2,"text":"Max for Live Editor"}]}